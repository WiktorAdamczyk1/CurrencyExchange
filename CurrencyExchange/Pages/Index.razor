@page "/"

@using DataAccessLibrary
@using DataAccessLibrary.Models
@using System.Security.Claims
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor _httpContextAccessor
@inject IExchangeRatesData _exchangeRatesData
@inject IExchangeUnitsData _exchangeUnitsData
@inject IExchangeWalletData _exchangeWallet
@inject IUserWalletsData _userWallet

<div>
    <div class="inline-table">
        <table class="table">
            <thead>
                <tr>
                    <th colspan="4" class="table-header">Currencies</th>
                </tr>
            </thead>
            <thead>
                <tr>
                    <th>
                        Currency
                    </th>
                    <th>
                        Unit
                    </th>
                    <th>
                        Value
                    </th>
                    <th>
                        Actions
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        GBP
                    </td>
                    <td>
                        1
                    </td>
                    <td>
                        5.83
                    </td>
                    <td>
                        <button class="btn btn-primary">Buy</button>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="inline-table">
        <table class="table">
            <thead>
                <tr>
                    <th colspan="5" class="table-header">Currencies</th>
                </tr>
            </thead>
            <thead>
                <tr>
                    <th>
                        Currency
                    </th>
                    <th>
                        Unit price
                    </th>
                    <th>
                        Amount
                    </th>
                    <th>
                        Value
                    </th>
                    <th>
                        Actions
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        GBP
                    </td>
                    <td>
                        5.83
                    </td>
                    <td>
                        100
                    </td>
                    <td>
                        583
                    </td>
                    <td>
                        <button class="btn btn-primary">Sell</button>
                    </td>
                </tr>
                <tr>
                    <td colspan="5"></td>
                </tr>
                <tr>
                    <td colspan="5">Available PLN:</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

@if (exchangeWallet == null)
{
    <p><em>Loading...</em></p>
}
else
{
    foreach (var exchangeRate in exchangeRates)
    {
        <p><em>@exchangeRate.USD</em></p>
        <br>
        <p><em>@exchangeRate.EUR</em></p>
        <br>
        <p><em>@exchangeRate.CHF</em></p>
        <br>
        <p><em>@exchangeRate.RUB</em></p>
        <br>
        <p><em>@exchangeRate.CZK</em></p>
        <br>
        <p><em>@exchangeRate.GBP</em></p>
        <br>
        <p><em>@exchangeRate.Timestamp</em></p>
        <br>
    }
    <p><em>ExchangeUnits=========VV====</em></p>
    <br>
    <p><em>@exchangeUnits.USD</em></p>
    <br>
    <p><em>@exchangeUnits.EUR</em></p>
    <br>
    <p><em>@exchangeUnits.CHF</em></p>
    <br>
    <p><em>@exchangeUnits.RUB</em></p>
    <br>
    <p><em>@exchangeUnits.CZK</em></p>
    <br>
    <p><em>@exchangeUnits.GBP</em></p>
    <br>

    <p><em>ExchangeWallet=========VV====</em></p>
    <br>
    <p><em>@exchangeWallet.PLN</em></p>
    <br>
    <p><em>@exchangeWallet.USD</em></p>
    <br>
    <p><em>@exchangeWallet.EUR</em></p>
    <br>
    <p><em>@exchangeWallet.CHF</em></p>
    <br>
    <p><em>@exchangeWallet.RUB</em></p>
    <br>
    <p><em>@exchangeWallet.CZK</em></p>
    <br>
    <p><em>@exchangeWallet.GBP</em></p>
    <br>
    if (userWallet != null)
    {
        <p><em>UserWallet=========VV====</em></p>
        <br>
        <p><em>@userWallet.PLN</em></p>
        <br>
        <p><em>@userWallet.USD</em></p>
        <br>
        <p><em>@userWallet.EUR</em></p>
        <br>
        <p><em>@userWallet.CHF</em></p>
        <br>
        <p><em>@userWallet.RUB</em></p>
        <br>
        <p><em>@userWallet.CZK</em></p>
        <br>
        <p><em>@userWallet.GBP</em></p>
        <br>
    }


}

@code {
    private List<ExchangeRatesModel> exchangeRates;
    private ExchangeUnitsModel exchangeUnits;
    private ExchangeWalletModel exchangeWallet;
    private UserWalletsModel userWallet;

    protected override async Task OnInitializedAsync()
    {
        exchangeRates = await _exchangeRatesData.GetExchangeRates();
        exchangeUnits = await _exchangeUnitsData.GetExchangeUnits();
        exchangeWallet = await _exchangeWallet.GetExchangeWallet();
        if (_httpContextAccessor.HttpContext.User.Identity.IsAuthenticated)
        {
            var principal = _httpContextAccessor.HttpContext.User;
            var loggedInUserId = principal.FindFirstValue(ClaimTypes.NameIdentifier);

            userWallet = await _userWallet.GetUserWallet(loggedInUserId);
        }

    }
}